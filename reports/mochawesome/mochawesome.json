{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2020-09-10T15:11:35.338Z",
    "end": "2020-09-10T15:12:48.009Z",
    "duration": 72671,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "962f2a83-de0c-4b12-b932-b970db1e89cf",
    "title": "",
    "fullFile": "cypress/integration/Gist.feature",
    "file": "cypress/integration/Gist.feature",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "4dc463a5-bd21-4f7d-a2d2-53dd51e276fb",
        "title": "As User creating a end-to-end (e2e) tests for creating a gist",
        "fullFile": "",
        "file": "",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "As a user, I want to create a public gist",
            "fullTitle": "As User creating a end-to-end (e2e) tests for creating a gist As a user, I want to create a public gist",
            "duration": 14388,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
            "err": {},
            "isRoot": false,
            "uuid": "81d4e84c-1e4a-4fa0-9894-a2fbc72b9868",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "As a user, I want to edit an existing gist",
            "fullTitle": "As User creating a end-to-end (e2e) tests for creating a gist As a user, I want to edit an existing gist",
            "duration": 11696,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
            "err": {},
            "isRoot": false,
            "uuid": "5782f5ff-6b5a-450d-a682-fa7fc1a978c6",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "As a user, I want to delete an existing gist",
            "fullTitle": "As User creating a end-to-end (e2e) tests for creating a gist As a user, I want to delete an existing gist",
            "duration": 10014,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
            "err": {},
            "isRoot": false,
            "uuid": "4873fe49-91ff-43dc-91f1-eaa9969c6389",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "As a user, I want to see my list of gists.",
            "fullTitle": "As User creating a end-to-end (e2e) tests for creating a gist As a user, I want to see my list of gists.",
            "duration": 36122,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach(step =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() =>\n    resolveAndRunAfterHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() => state.onFinishScenario(scenario));",
            "err": {},
            "isRoot": false,
            "uuid": "95dfd9f6-f30f-430a-a27a-db6a3394525b",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "81d4e84c-1e4a-4fa0-9894-a2fbc72b9868",
          "5782f5ff-6b5a-450d-a682-fa7fc1a978c6",
          "4873fe49-91ff-43dc-91f1-eaa9969c6389",
          "95dfd9f6-f30f-430a-a27a-db6a3394525b"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 72220,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2020
}